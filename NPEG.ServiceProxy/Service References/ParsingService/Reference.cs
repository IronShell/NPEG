//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Npeg.ServiceProxy.ParsingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NpegData", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Service")]
    [System.SerializableAttribute()]
    public partial class NpegData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Npeg.ServiceProxy.ParsingService.AstNode AstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Npeg.ServiceProxy.ParsingService.AExpression ParseTreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Npeg.ServiceProxy.ParsingService.Warn[] WarningsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Npeg.ServiceProxy.ParsingService.AstNode Ast {
            get {
                return this.AstField;
            }
            set {
                if ((object.ReferenceEquals(this.AstField, value) != true)) {
                    this.AstField = value;
                    this.RaisePropertyChanged("Ast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Npeg.ServiceProxy.ParsingService.AExpression ParseTree {
            get {
                return this.ParseTreeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParseTreeField, value) != true)) {
                    this.ParseTreeField = value;
                    this.RaisePropertyChanged("ParseTree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Npeg.ServiceProxy.ParsingService.Warn[] Warnings {
            get {
                return this.WarningsField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningsField, value) != true)) {
                    this.WarningsField = value;
                    this.RaisePropertyChanged("Warnings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AstNode", Namespace="http://schemas.datacontract.org/2004/07/NPEG")]
    [System.SerializableAttribute()]
    public partial class AstNode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Npeg.ServiceProxy.ParsingService.AstNode[] ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Npeg.ServiceProxy.ParsingService.TokenMatch TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Npeg.ServiceProxy.ParsingService.AstNode[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Npeg.ServiceProxy.ParsingService.TokenMatch Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AExpression", Namespace="http://schemas.datacontract.org/2004/07/NPEG")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.ALeaf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.RecursionCall))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.AnyCharacter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.DynamicBackReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.CodePoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.CharacterClass))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Fatal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Literal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Warn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.AComposite))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.CapturingGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.LimitingRepetition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.NotPredicate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.OneOrMore))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Optional))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.PrioritizedChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.RecursionCreate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Sequence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.ZeroOrMore))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.AndPredicate))]
    public partial class AExpression : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Warn", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Terminals")]
    [System.SerializableAttribute()]
    public partial class Warn : Npeg.ServiceProxy.ParsingService.ALeaf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenMatch", Namespace="http://schemas.datacontract.org/2004/07/NPEG")]
    [System.SerializableAttribute()]
    public partial class TokenMatch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ALeaf", Namespace="http://schemas.datacontract.org/2004/07/NPEG")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.RecursionCall))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.AnyCharacter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.DynamicBackReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.CodePoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.CharacterClass))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Fatal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Literal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Warn))]
    public partial class ALeaf : Npeg.ServiceProxy.ParsingService.AExpression {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecursionCall", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Terminals")]
    [System.SerializableAttribute()]
    public partial class RecursionCall : Npeg.ServiceProxy.ParsingService.ALeaf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnyCharacter", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Terminals")]
    [System.SerializableAttribute()]
    public partial class AnyCharacter : Npeg.ServiceProxy.ParsingService.ALeaf {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DynamicBackReference", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Terminals")]
    [System.SerializableAttribute()]
    public partial class DynamicBackReference : Npeg.ServiceProxy.ParsingService.ALeaf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackReferenceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCaseSensitiveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackReferenceName {
            get {
                return this.BackReferenceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BackReferenceNameField, value) != true)) {
                    this.BackReferenceNameField = value;
                    this.RaisePropertyChanged("BackReferenceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCaseSensitive {
            get {
                return this.IsCaseSensitiveField;
            }
            set {
                if ((this.IsCaseSensitiveField.Equals(value) != true)) {
                    this.IsCaseSensitiveField = value;
                    this.RaisePropertyChanged("IsCaseSensitive");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodePoint", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Terminals")]
    [System.SerializableAttribute()]
    public partial class CodePoint : Npeg.ServiceProxy.ParsingService.ALeaf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Match {
            get {
                return this.MatchField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchField, value) != true)) {
                    this.MatchField = value;
                    this.RaisePropertyChanged("Match");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CharacterClass", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Terminals")]
    [System.SerializableAttribute()]
    public partial class CharacterClass : Npeg.ServiceProxy.ParsingService.ALeaf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassExpressionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassExpression {
            get {
                return this.ClassExpressionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassExpressionField, value) != true)) {
                    this.ClassExpressionField = value;
                    this.RaisePropertyChanged("ClassExpression");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fatal", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Terminals")]
    [System.SerializableAttribute()]
    public partial class Fatal : Npeg.ServiceProxy.ParsingService.ALeaf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Literal", Namespace="http://schemas.datacontract.org/2004/07/NPEG.Terminals")]
    [System.SerializableAttribute()]
    public partial class Literal : Npeg.ServiceProxy.ParsingService.ALeaf {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCaseSensitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCaseSensitive {
            get {
                return this.IsCaseSensitiveField;
            }
            set {
                if ((this.IsCaseSensitiveField.Equals(value) != true)) {
                    this.IsCaseSensitiveField = value;
                    this.RaisePropertyChanged("IsCaseSensitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchText {
            get {
                return this.MatchTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchTextField, value) != true)) {
                    this.MatchTextField = value;
                    this.RaisePropertyChanged("MatchText");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AComposite", Namespace="http://schemas.datacontract.org/2004/07/NPEG")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.CapturingGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.LimitingRepetition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.NotPredicate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.OneOrMore))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Optional))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.PrioritizedChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.RecursionCreate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.Sequence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.ZeroOrMore))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Npeg.ServiceProxy.ParsingService.AndPredicate))]
    public partial class AComposite : Npeg.ServiceProxy.ParsingService.AExpression {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Npeg.ServiceProxy.ParsingService.AExpression[] ChildrenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Npeg.ServiceProxy.ParsingService.AExpression[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CapturingGroup", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class CapturingGroup : Npeg.ServiceProxy.ParsingService.AComposite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoCreateCustomAstNodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoReplaceBySingleChildNodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DoCreateCustomAstNode {
            get {
                return this.DoCreateCustomAstNodeField;
            }
            set {
                if ((this.DoCreateCustomAstNodeField.Equals(value) != true)) {
                    this.DoCreateCustomAstNodeField = value;
                    this.RaisePropertyChanged("DoCreateCustomAstNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DoReplaceBySingleChildNode {
            get {
                return this.DoReplaceBySingleChildNodeField;
            }
            set {
                if ((this.DoReplaceBySingleChildNodeField.Equals(value) != true)) {
                    this.DoReplaceBySingleChildNodeField = value;
                    this.RaisePropertyChanged("DoReplaceBySingleChildNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LimitingRepetition", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class LimitingRepetition : Npeg.ServiceProxy.ParsingService.AComposite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Max {
            get {
                return this.MaxField;
            }
            set {
                if ((this.MaxField.Equals(value) != true)) {
                    this.MaxField = value;
                    this.RaisePropertyChanged("Max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Min {
            get {
                return this.MinField;
            }
            set {
                if ((this.MinField.Equals(value) != true)) {
                    this.MinField = value;
                    this.RaisePropertyChanged("Min");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotPredicate", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class NotPredicate : Npeg.ServiceProxy.ParsingService.AComposite {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OneOrMore", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class OneOrMore : Npeg.ServiceProxy.ParsingService.AComposite {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Optional", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class Optional : Npeg.ServiceProxy.ParsingService.AComposite {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrioritizedChoice", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class PrioritizedChoice : Npeg.ServiceProxy.ParsingService.AComposite {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecursionCreate", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class RecursionCreate : Npeg.ServiceProxy.ParsingService.AComposite {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FunctionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FunctionName {
            get {
                return this.FunctionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FunctionNameField, value) != true)) {
                    this.FunctionNameField = value;
                    this.RaisePropertyChanged("FunctionName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sequence", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class Sequence : Npeg.ServiceProxy.ParsingService.AComposite {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZeroOrMore", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class ZeroOrMore : Npeg.ServiceProxy.ParsingService.AComposite {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AndPredicate", Namespace="http://schemas.datacontract.org/2004/07/NPEG.NonTerminals")]
    [System.SerializableAttribute()]
    public partial class AndPredicate : Npeg.ServiceProxy.ParsingService.AComposite {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ParsingService.IParsingService")]
    public interface IParsingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParsingService/Parse", ReplyAction="http://tempuri.org/IParsingService/ParseResponse")]
        Npeg.ServiceProxy.ParsingService.NpegData Parse(string rules, byte[] input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IParsingServiceChannel : Npeg.ServiceProxy.ParsingService.IParsingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParsingServiceClient : System.ServiceModel.ClientBase<Npeg.ServiceProxy.ParsingService.IParsingService>, Npeg.ServiceProxy.ParsingService.IParsingService {
        
        public ParsingServiceClient() {
        }
        
        public ParsingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ParsingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ParsingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ParsingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Npeg.ServiceProxy.ParsingService.NpegData Parse(string rules, byte[] input) {
            return base.Channel.Parse(rules, input);
        }
    }
}
